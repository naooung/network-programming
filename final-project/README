            네트워크 기말 프로젝트: 다빈치 코드
                Final Project: Davinci Code

====================================================================


** 밑 노션 링크에 들어가서 확인하시는 것을 추천드립니다!!
https://brindle-health-94a.notion.site/Network-Project-Davinci-Code-21d82dea367c8069aed6fbc9b831eec1

--------------------------------------------------------------------
1. 접속 방법
--------------------------------------------------------------------
서버      : server 22003
클라이언트: client 127.0.0.1 22003

--------------------------------------------------------------------
2. Client Command Option
--------------------------------------------------------------------
노션 링크에서 확인 부탁드리겠습니다...!
▶ https://www.notion.so/21e82dea367c800c8191fa834ffa6f9a?pvs=21

--------------------------------------------------------------------
3. 숫자 타일 구성
--------------------------------------------------------------------
 Color | Tiles
-------+------------------------------------------------------------
 Black | 0 1 2 3 4 5 6 7 8 9 -
 White | 0 1 2 3 4 5 6 7 8 9 -

--------------------------------------------------------------------
4. 숫자 타일 구조체
--------------------------------------------------------------------
typedef struct {
    char  color;   /* 타일 색상: 'B' or 'W'         */
    float num;     /* 숫자 0-9, 조커(-)는 -1.0      */
    bool  is_open; /* 공개 여부 (true = 공개됨)     */
} Tile;

--------------------------------------------------------------------
5. 구체적인 설명
--------------------------------------------------------------------
[서버: 게임 진행자]
  • 2인 모두 준비( /ready ) 상태면 게임 시작
  • 각 플레이어에게 타일 4장 무작위 배분
  • 플레이어 순서 결정 → 턴마다 수행
      - 새 타일 1장 배분 후 플레이어 타일 버블 정렬
      - 추측 판정
          · 성공 → 상대 타일 공개
          · 실패 → 자신의 타일 공개
      - 종료 조건 확인
          · 모든 타일 공개된 플레이어 → “관전하시겠습니까? (y/n)”
          · 생존자 1명 → 게임 종료 및 우승자 발표
  • 이미 게임 중이면 “게임이 이미 진행 중입니다. 잠시 후 다시 시도해주세요.”

[클라이언트: 게임 참가자]
  • /ready 로 준비 → 전원 준비 시 게임 시작
  • 시작 직후 타일 4장 수령 및 확인
  • 자신의 턴
      - 조커를 뽑았을 때만 위치 지정 가능
      - /guess 명령으로 추측 정보 전송

--------------------------------------------------------------------
6. 구현 방법
--------------------------------------------------------------------
▶ Multi-Thread 방식
   - 각 플레이어/턴을 독립 스레드로 처리

▶ 구현 Point
   - 공유 자원 접근 시 **뮤텍스**로 동기화 필수
--------------------------------------------------------------------